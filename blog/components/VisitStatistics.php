<?php


namespace blog\components;


use blog\helpers\ArticleHelper;
use common\models\Statistics;
use common\models\VisitedPage;
use Jaybizzle\CrawlerDetect\CrawlerDetect;
use Sinergi\BrowserDetector\Browser;
use Sinergi\BrowserDetector\Os;
use Yii;
use yii\base\Component;

class VisitStatistics extends Component
{
    public function init()
    {
        if (!Yii::$app->request->isAjax) {
            if ($this->isNewVisitor()) {
                $id = $this->addVisitor();
                $this->addPage($id);
            } else {
                $id = $this->getIdByIp();
                $this->updateStatistics($id);
                $this->addPage($id);
                Yii::$app->session->setFlash('statisticsId', $id);
            }
        }

        parent::init(); // TODO: Change the autogenerated stub
    }

    public function addVisitor()
    {
        $type = (new CrawlerDetect())->isCrawler() ? Statistics::BOT : Statistics::HUMAN;

        $statistics = new Statistics();

        $statistics->ip = Yii::$app->request->userIP;
        $statistics->browser = (new Browser())->getName();
        $statistics->os = (new Os())->getName();
        $statistics->device = Yii::getAlias('@device');
        $statistics->type = $type;

        $statistics->save();

        Yii::$app->session->setFlash('statisticsId', $statistics->getPrimaryKey());

        return $statistics->getPrimaryKey();
    }

    public function addPage($id): void
    {
        $page = ArticleHelper::getPageNameByAlias(self::getAliasByUrl());

        $visitedPage = new VisitedPage();

        $visitedPage->statistics_id = $id;
        $visitedPage->page = $page ? $page : Yii::$app->request->url;
        $visitedPage->link = Yii::$app->request->url;

        $visitedPage->save();

        Yii::$app->session->setFlash('realId', $visitedPage->getPrimaryKey());
    }

    public function updateStatistics($id): void
    {
        $statistics = Statistics::findOne($id);

        $statistics->updateAttributes(['visited_at' => date('Y-m-d H:i:s')]);
    }

    private function isNewVisitor(): bool
    {
        return !Statistics::findOne(['ip' => Yii::$app->request->userIP]);
    }

    private function isBot(): bool
    {
        return false;
    }

    private static function getIdByIp(): int
    {
        $ip = Yii::$app->request->userIP;

        return Statistics::findOne(['ip' => $ip])->id;
    }

    private function getAliasByUrl(): string
    {
        return mb_substr(Yii::$app->request->url, 1);
    }

    public static function setViewingTime($id, $time): void
    {
        $visitedPage = VisitedPage::findOne(['id' => $id]);
        $visitedPage->updateAttributes(['viewing_time' => $time]);
    }
}